{"version":3,"sources":["assets/img/iconLogo.png","components/Layout/logo/logo.styled.js","components/Layout/logo/logo.js","components/Layout/nav/nav.styled.js","config/language/index.js","components/Layout/nav/nav.js","components/Layout/Layout.styled.js","components/Layout/Layout.js","containers/header/header.js","components/jumbotron/jumbotron.styled.js","assets/img/banner.svg","components/jumbotron/jumbotron.js","components/featured/featured.styled.js","components/featured/featured.js","components/card/card.styled.js","assets/img/completedTask.svg","assets/img/rocket.svg","assets/img/taskingg.svg","assets/img/task.svg","components/card/card.js","containers/body/body.js","components/footerContainer/footerContainer.styled.js","components/footerContainer/switchLenguageTheme/switchThemeContainer.styled.js","config/theme/index.js","components/footerContainer/switchLenguageTheme/switchThemeContainer.js","components/footerContainer/switchLenguageTheme/switchLenguageContainer.styled.js","components/footerContainer/switchLenguageTheme/switchLenguageContainer.js","components/footerContainer/footerContainer.js","containers/footer/footer.js","containers/tasks/taskLayout/taskLayout.styled.js","containers/tasks/taskLayout/taskLayout.js","containers/tasks/tasks.styled.js","axios-orders.js","components/spinner/spinner.js","containers/tasks/tasks.js","App.js","reportWebVitals.js","index.js"],"names":["ImgStyle","styled","img","Logo","props","src","TasksLogo","NavList","ul","theme","primaryColor","Button","button","Link","NavLink","I18nContext","createContext","es","en","Nav","useContext","messages","language","to","exact","NavIteam","NavIteamButton","LayoutStyle","div","LayoutStyleContainer","Layout","Header","ContainerJumbotron","ContainerInfoStyled","InfoJumbotron","TextUpperCase","p","TextLowerCase","Jumbotron","JumbotronTitle1","JumbotronTitle2","JumbotronTitle3","JumbotronText","LogoJumbotron","FeaturedStyled","Title","Featured","FeaturedTitle","FeaturedText","CardFeatured","CardFeaturedContainer","reverse","TextContainer","ImagenContainer","Imagen","SubTitle","Text","Card","CardTitle","CardSubTitle","CardText","card1Img","CardTitle2","CardSubTitle2","CardText2","card2Img","CardTitle3","CardSubTitle3","CardText3","card3Img","CardTitle4","CardSubTitle4","CardText4","card4Img","Body","ContainerFooter","ContainerTheme","ButtonBlue","blueTheme","darkTheme","SwitchThemeContainer","setTheme","SelectTheme","onClick","colorDark","colorBlue","LanguageContainer","Copyright","Select","select","SwitchLenguageContainer","setLanguage","value","onChange","target","disabled","FooterContainer","Footer","TaskLayoutStyled","color","Subtitle","Content","ButtonDelete","TaskLayout","title","subtitle","content","methodDelete","TaskContainer","PanelTasks","PanelCrateTask","displayPanel","Inputs","input","TextArea","textarea","ButtonADD","h1","ButtonColorsContainer","ButtonColor","ButtonPink","instance","axios","create","baseURL","spinner","className","Tasks","useState","tasks","colorTaskChoosen","colectionPosts","loading","task","setTask","setLoading","getTasks","get","then","response","data","console","log","Object","entries","map","id","catch","error","useEffect","buildTask","name","tasksModify","newTask","colorTask","setColor","allPosts","showView","theTask","delete","titleBuildTask","titleTask","type","placeholder","event","subTitleTask","contentTask","buttonColorBlue","buttonColorPink","buttonColorGreen","storingTask","post","finally","displayValue","add","App","Provider","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"g7EAAe,MAA0B,qC,4ICElC,IAAMA,EAAWC,IAAOC,IAAV,KCWNC,EAVF,SAACC,GAEV,OACI,8BACI,cAACJ,EAAD,CAAUK,IAAKC,O,okBCJpB,IAAMC,EAAUN,IAAOO,GAAV,KASP,qBAAEC,MAAeC,gBAKjBC,EAASV,IAAOW,OAAV,KAGK,qBAAEH,MAAeC,gBAM5BG,EAAOZ,YAAOa,IAAPb,CAAH,KAIJ,qBAAEQ,MAAeC,gB,gBC1BjBK,EAAcC,0BAGZ,GAAEC,KAAIC,MCYNC,EAdH,SAACf,GAAW,IAAD,EACYgB,qBAAWL,GAAlCM,EADW,EACXA,SAAUC,EADC,EACDA,SAElB,OACI,8BACI,eAACf,EAAD,WACI,6BAAI,cAACM,EAAD,CAAMU,GAAG,IAAIC,OAAK,EAAlB,SAAoBH,EAASC,GAAUG,aAC3C,6BAAI,cAAC,IAAD,CAASF,GAAG,SAAZ,SAAqB,cAACZ,EAAD,UAASU,EAASC,GAAUI,2B,yRCV9D,IAAMC,EAAc1B,IAAO2B,IAAV,KAIXC,EAAuB5B,IAAO2B,IAAV,KCYlBE,EAdA,SAAC1B,GAEZ,OACI,cAACuB,EAAD,UACI,eAACE,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,UCCDE,EATA,WAEX,OACI,8BACI,cAAC,EAAD,O,i7CCJL,IAAMC,EAAqB/B,IAAO2B,IAAV,KACR,qBAAEnB,MAAeC,gBAG3BuB,EAAsBhC,IAAO2B,IAAV,KAWnBM,EAAgBjC,IAAO2B,IAAV,KAWbO,EAAgBlC,IAAOmC,EAAV,KAebC,EAAgBpC,IAAOmC,EAAV,KAQbzB,EAASV,IAAOW,OAAV,KAQNZ,EAAWC,IAAOC,IAAV,KC3DN,MAA0B,mCC4B1BoC,EArBG,WAAO,IAAD,EACWlB,qBAAWL,GAAlCM,EADY,EACZA,SAAUC,EADE,EACFA,SAElB,OACI,cAACU,EAAD,UACI,eAACC,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,UAAgBd,EAASC,GAAUiB,kBACnC,cAACJ,EAAD,UAAgBd,EAASC,GAAUkB,kBACnC,cAACL,EAAD,UAAgBd,EAASC,GAAUmB,kBACnC,cAACJ,EAAD,UAAgBhB,EAASC,GAAUoB,gBACnC,cAAC,IAAD,CAASnB,GAAG,SAAZ,SAAqB,cAAC,EAAD,UAASF,EAASC,GAAUI,sBAErD,cAACQ,EAAD,UACI,cAAC,EAAD,CAAU7B,IAAKsC,Y,2TCnB5B,IAAMC,EAAiB3C,IAAO2B,IAAV,KAQdiB,EAAQ5C,IAAO2B,IAAV,KCIHkB,GAXE,WAAO,IAAD,EACY1B,qBAAWL,GAAlCM,EADW,EACXA,SAAUC,EADC,EACDA,SAElB,OACI,eAACsB,EAAD,WACI,cAACC,EAAD,UAAQxB,EAASC,GAAUyB,gBAC3B,4BAAI1B,EAASC,GAAU0B,mB,+2CCP5B,IAAMC,GAAehD,IAAO2B,IAAV,MAIZsB,GAAwBjD,IAAO2B,IAAV,MAUV,qBAAEuB,QAAqB,cAAc,SAKhDC,GAAgBnD,IAAO2B,IAAV,MAQJ,qBAAEuB,QAAqB,IAAI,WAC5B,qBAAEA,QAAqB,QAAQ,SAKvCE,GAAkBpD,IAAO2B,IAAV,MAIf0B,GAASrD,IAAOC,IAAV,MAMN2C,GAAQ5C,IAAO2B,IAAV,MACL,qBAAEnB,MAAgBC,gBAED,qBAAED,MAAgBC,gBAUnC6C,GAAWtD,IAAO2B,IAAV,MAKR4B,GAAOvD,IAAO2B,IAAV,MC/DF,OAA0B,0CCA1B,OAA0B,mCCA1B,OAA0B,qCCA1B,OAA0B,iCC0D1B6B,GAlDF,WAAO,IAAD,EAEgBrC,qBAAWL,GAAlCM,EAFO,EAEPA,SAAUC,EAFH,EAEGA,SAElB,OACI,eAAC2B,GAAD,WACI,eAACC,GAAD,WACI,eAACE,GAAD,WACI,cAAC,GAAD,UAAQ/B,EAASC,GAAUoC,YAC3B,cAACH,GAAD,UAAWlC,EAASC,GAAUqC,eAC9B,cAACH,GAAD,UAAOnC,EAASC,GAAUsC,cAE9B,cAACP,GAAD,UACA,cAACC,GAAD,CAAQjD,IAAKwD,UAGjB,eAACX,GAAD,CAAuBC,SAAO,EAA9B,UACI,eAACC,GAAD,CAAeD,SAAO,EAAtB,UACI,cAAC,GAAD,UAAQ9B,EAASC,GAAUwC,aAC3B,cAACP,GAAD,UAAWlC,EAASC,GAAUyC,gBAC9B,cAACP,GAAD,UAAOnC,EAASC,GAAU0C,eAE9B,cAACX,GAAD,UACI,cAACC,GAAD,CAAQjD,IAAK4D,UAGrB,eAACf,GAAD,WACI,eAACE,GAAD,WACI,cAAC,GAAD,UAAQ/B,EAASC,GAAU4C,aAC3B,cAACX,GAAD,UAAWlC,EAASC,GAAU6C,gBAC9B,cAACX,GAAD,UAAOnC,EAASC,GAAU8C,eAE9B,cAACf,GAAD,UACI,cAACC,GAAD,CAAQjD,IAAKgE,UAGrB,eAACnB,GAAD,CAAuBC,SAAO,EAA9B,UACI,eAACC,GAAD,CAAeD,SAAO,EAAtB,UACI,cAAC,GAAD,UAAQ9B,EAASC,GAAUgD,aAC3B,cAACf,GAAD,UAAWlC,EAASC,GAAUiD,gBAC9B,cAACf,GAAD,UAAOnC,EAASC,GAAUkD,eAE9B,cAACnB,GAAD,UACA,cAACC,GAAD,CAAQjD,IAAKoE,cCpCdC,GAXF,WAET,OACI,gCACI,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,4TCRL,IAAMC,GAAkB1E,IAAO2B,IAAV,M,yxBCArB,IAAMgD,GAAiB3E,IAAO2B,IAAV,MAYd4B,GAAOvD,IAAOmC,EAAV,MAIJzB,GAASV,IAAOW,OAAV,MAeNiE,GAAa5E,YAAOU,GAAPV,CAAH,MCjCV6E,GAAY,CACrBpE,aAAc,WAGLqE,GAAY,CACrBrE,aAAc,aCYHsE,GAZc,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAAa,EACT7D,qBAAWL,GAAlCM,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACI,eAACsD,GAAD,WACI,cAAC,GAAD,UAAOvD,EAASC,GAAU4D,cAC1B,cAAC,GAAD,CAAQC,QAAS,kBAAIF,EAASF,KAA9B,SAA2C1D,EAASC,GAAU8D,YAC9D,cAACP,GAAD,CAAYM,QAAS,kBAAIF,EAASH,KAAlC,SAA+CzD,EAASC,GAAU+D,gB,obCVvE,IAAMC,GAAoBrF,IAAO2B,IAAV,MAWjB2D,GAAYtF,IAAOmC,EAAV,MACX,qBAAE3B,MAAgBC,gBAGhB8E,GAASvF,IAAOwF,OAAV,MCEJC,GAfiB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACtBrE,EAAaF,qBAAWL,GAAxBO,SAER,OACI,eAACgE,GAAD,WACI,cAACC,GAAD,sCACA,eAACC,GAAD,CAAQI,MAAOtE,EAAUuE,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAaH,EAAYG,EAAOF,QAAnE,UACI,wBAAQG,SAAqB,OAAXzE,EAAiBsE,MAAM,KAAzC,gBACA,wBAAQG,SAAqB,OAAXzE,EAAiBsE,MAAM,KAAzC,uBCGDI,GAXS,SAAC,GAA8B,IAA5Bf,EAA2B,EAA3BA,SAAUU,EAAiB,EAAjBA,YAEjC,OACI,eAAChB,GAAD,WACI,cAAC,GAAD,CAAaM,SAAUA,IACvB,cAAC,GAAD,CAAgBU,YAAaA,QCG1BM,GAVA,SAAC7F,GAEZ,OACI,8BACI,cAAC,GAAD,gBAAqBA,O,k/CCJ1B,IAAM8F,GAAmBjG,IAAO2B,IAAV,MAON,qBAAEuE,SA4BZtD,GAAQ5C,IAAO2B,IAAV,MAMLwE,GAAWnG,IAAO2B,IAAV,MAKRyE,GAAUpG,IAAO2B,IAAV,MAMP0E,GAAerG,IAAOW,OAAV,MCzCV2F,GAZI,SAAAnG,GAEf,OACI,eAAC8F,GAAD,CAAkBC,MAAO/F,EAAM+F,MAA/B,UACI,cAAC,GAAD,UAAQ/F,EAAMoG,QACd,cAACJ,GAAD,UAAWhG,EAAMqG,WACjB,cAACJ,GAAD,UAAUjG,EAAMsG,UAChB,cAACJ,GAAD,CAAcnB,QAAS/E,EAAMuG,aAA7B,wB,uzECNL,IAAMC,GAAgB3G,IAAO2B,IAAV,MAQbiF,GAAa5G,IAAO2B,IAAV,MASVkF,GAAiB7G,IAAO2B,IAAV,MAQV,qBAAEmF,aAA8B,kBAAoB,wBACvD,qBAAEA,aAA8B,IAAM,OAQvCC,GAAS/G,IAAOgH,MAAV,MAUNC,GAAWjH,IAAOkH,SAAV,MAQRxG,GAASV,IAAOW,OAAV,MAKK,qBAAEH,MAAeC,gBAK5B0G,GAAYnH,YAAOU,GAAPV,CAAH,MACC,qBAAEQ,MAAeC,gBAGzB,qBAAEqG,aAAqC,IAAN,OAGnClE,GAAQ5C,IAAOoH,GAAV,MAOLC,GAAwBrH,IAAO2B,IAAV,MAOrB2F,GAActH,IAAOW,OAAV,MAeXiE,GAAa5E,YAAOsH,GAAPtH,CAAH,MAOVuH,GAAavH,YAAOsH,GAAPtH,CAAH,M,SCrGRwH,G,QAJEC,EAAMC,OAAO,CAC1BC,QAAQ,2DCKGC,I,MANC,WACZ,OACI,qBAAKC,UAAU,SAAf,0BCkLOC,GA9KD,WAAO,IAAD,EACe3G,qBAAWL,GAAlCM,EADQ,EACRA,SAAUC,EADF,EACEA,SADF,EAGQ0G,mBAAS,CAC7BC,MAAO,CACHzB,MAAO,GACPC,SAAU,GACVC,QAAS,GACTwB,iBAAkB,WAGtBC,eAAgB,GAChBpB,cAAc,EACdqB,SAAS,IAbG,mBAGTC,EAHS,KAGHC,EAHG,KAeVC,EAAa,SAAAH,GAAO,OAAIE,EAAQ,6BAC/BD,GAD8B,IAEjCD,cAEEI,EAAW,WACbD,GAAW,GACXb,GAAMe,IAAI,gBACLC,MAAK,SAAAC,GACF,GAAIA,EAASC,KAAM,CACfC,QAAQC,IAAI,MAEZR,EAAQ,CACJL,MAAOI,EAAKJ,MACZE,gBAHgBF,EAGYU,EAASC,KAHZG,OAAOC,QAAQf,GAAOgB,KAAI,mCAAEC,EAAF,KAAMb,EAAN,0BAAmBa,MAAOb,OAGlClF,UAC3C4D,cAAc,EACdqB,SAAS,SAGbG,GAAW,GARS,IAAAN,EAUnBU,EAASC,MACVN,EAAQ,6BACFD,GADC,IAEHF,eAAgB,SAM3BgB,OAAM,SAAAC,GAAK,OAAIP,QAAQC,IAAIM,OAGpCC,qBAAU,WACNb,MACD,IAoBH,IAgBMc,EAAY,SAAC,EAAYC,GAAU,IAApBzD,EAAmB,EAAnBA,OACX0D,EAAW,gBACVnB,EAAKJ,OAENwB,EAAO,6BAAQD,GAAR,mBAAsBD,EAAOzD,EAAOF,QAC3CuC,EAAc,aAAOE,EAAKF,gBAChCG,EAAQ,CACJL,MAAOwB,EACPtB,eAAgBA,EAChBpB,cAAc,KAKhB2C,EAAY,SAACvD,GACA,gBACRkC,EAAKJ,OADZ,IAGM0B,EAAQ,6BAAQtB,EAAKJ,OAAb,mBAAqB,mBAAqB9B,IAClDyD,EAAQ,aACPvB,EAAKF,gBAEZG,EAAQ,CACJL,MAAO0B,EACPxB,eAAgByB,EAChB7C,cAAc,KAyBlB8C,EAAWxB,EAAKF,eAAec,KAAI,SAACa,GAAD,OACnC,cAAC,GAAD,CAEItD,MAAOsD,EAAQtD,MACfC,SAAUqD,EAAQrD,SAClBC,QAASoD,EAAQpD,QACjBC,aAAc,kBAxEFuC,EAwEmBY,EAAQZ,GA5D3CX,GAAW,QACXb,GAAMqC,OAAO,WAAab,EAAK,SAASR,KAAKF,GAAS,kBAAKD,GAAW,MAAQY,OAAM,SAAAC,GAAK,OAAIP,QAAQC,IAAIM,MAb1F,IAACF,GAyEZ/C,MAAO2D,EAAQ5B,kBALV4B,EAAQZ,OAWrB,OAJIb,EAAKD,UACLyB,EAAW,cAAC,GAAD,KAKX,eAACjD,GAAD,WACI,cAACC,GAAD,UACKgD,IAEL,eAAC/C,GAAD,CAAgBC,aAAcsB,EAAKtB,aAAnC,UACI,cAAC,GAAD,UAAQ1F,EAASC,GAAU0I,iBAC3B,gCAAQ3I,EAASC,GAAU2I,YAC3B,cAACjD,GAAD,CAAQkD,KAAK,OAAOC,YAAY,QAAQvE,MAAOyC,EAAKJ,MAAMzB,MAAOX,SAAU,SAACuE,GAAD,OAAWd,EAAUc,EAAO,YACvG,gCAAQ/I,EAASC,GAAU+I,eAC3B,cAACrD,GAAD,CAAQkD,KAAK,OAAOC,YAAY,YAAYvE,MAAOyC,EAAKJ,MAAMxB,SAAUZ,SAAU,SAACuE,GAAD,OAAWd,EAAUc,EAAO,eAC9G,gCAAQ/I,EAASC,GAAUgJ,cAC3B,cAACpD,GAAD,CAAUgD,KAAK,OAAOC,YAAY,sBAAsBvE,MAAOyC,EAAKJ,MAAMvB,QAASb,SAAU,SAACuE,GAAD,OAAWd,EAAUc,EAAO,cACzH,eAAC9C,GAAD,WACI,cAAC,GAAD,CAAYnC,QAAS,kBAAMuE,EAAU,YAArC,SAAkDrI,EAASC,GAAUiJ,kBACrE,cAAC/C,GAAD,CAAYrC,QAAS,kBAAMuE,EAAU,SAArC,SAA+CrI,EAASC,GAAUkJ,kBAClE,cAACjD,GAAD,CAAapC,QAAS,kBAAMuE,EAAU,cAAtC,SAAqDrI,EAASC,GAAUmJ,sBAE5E,cAAC,GAAD,CAAQtF,QA9CF,WAEd,IAAMuF,EAAc,CAChBlE,MAAO6B,EAAKJ,MAAMzB,MAClBC,SAAU4B,EAAKJ,MAAMxB,SACrBC,QAAS2B,EAAKJ,MAAMvB,QACpBwB,iBAAkBG,EAAKJ,MAAMC,kBAEjCK,GAAW,GACXb,GAAMiD,KAAK,eAAgBD,GACtBhC,KAAKF,GACLoC,SAAQ,kBAAMrC,GAAW,OAmCtB,0BAEJ,cAACnB,GAAD,CAAWL,aAAcsB,EAAKtB,aAAc5B,QAAS,kBAvD9B0F,GAuD0D,OAtDrFvC,EAAQ,6BACDD,GADA,IAEHtB,aAAc8D,KAHQ,IAACA,GAuDvB,SAAyFxJ,EAASC,GAAUwJ,UC/IzGC,GAtBH,WAAO,IAAD,EACgB/C,mB/BRH,M+BOb,mBACT1G,EADS,KACCqE,EADD,OAEUqC,mBAASlD,IAFnB,mBAETrE,EAFS,KAEFwE,EAFE,KAIhB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAexE,MAAOA,EAAtB,SACE,eAACM,EAAYiK,SAAb,CAAsBpF,MAAO,CAAEvE,WAAUC,YAAzC,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2J,KAAK,IAAIzJ,OAAK,EAAC0J,UAAWxG,KACjC,cAAC,IAAD,CAAOuG,KAAK,SAAQzJ,OAAK,EAAC0J,UAAWnD,KACrC,cAAC,IAAD,CAAOoD,OAAQ,kBAAM,iDAEvB,cAAC,GAAD,CAAQlG,SAAUA,EAAUU,YAAaA,YCdpCyF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.1d241a53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iconLogo.e653177c.png\";","import styled from 'styled-components';\r\n\r\nexport const ImgStyle = styled.img` \r\n   width:100px;\r\n   height:75px;\r\n   margin-left:10px;\r\n   \r\n`;","import TasksLogo from \"../../../assets/img/iconLogo.png\";\r\nimport { ImgStyle } from \"./logo.styled\";\r\n\r\nconst Logo = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ImgStyle src={TasksLogo}></ImgStyle>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Logo;","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const NavList = styled.ul` \r\n   display:flex;\r\n   align-items:center;\r\n   padding:0;\r\n   \r\n   li{\r\n    margin:4px;\r\n    margin-right:20px;\r\n    list-style:none;\r\n    color: ${({theme})=>theme.primaryColor};\r\n\r\n   }\r\n`;\r\n\r\nexport const Button = styled.button` \r\n    padding: 10px 50px;\r\n    box-sizing:border-box;\r\n    background-color: ${({theme})=>theme.primaryColor};\r\n    color: white;\r\n    border: none;\r\n`;\r\n\r\n\r\nexport const Link = styled(NavLink)` \r\n    margin:4px;\r\n    margin-right:20px;\r\n    text-decoration:none;\r\n    color: ${({theme})=>theme.primaryColor};\r\n\r\n`;\r\n","import { createContext } from \"react\";\r\nimport es from './es.json';\r\nimport en from './en.json';\r\n\r\nexport const I18nContext = createContext();\r\nexport const defaultLanguage = 'en';\r\n\r\nexport default { es, en };","import { useContext } from \"react\";\r\nimport { NavList, Button, Link } from \"./nav.styled\";\r\nimport { I18nContext } from \"../../../config/language\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = (props) => {\r\n    const { messages, language } = useContext(I18nContext);\r\n\r\n    return (\r\n        <div>\r\n            <NavList>\r\n                <li><Link to='/' exact>{messages[language].NavIteam}</Link></li>\r\n                <li><NavLink to='/posts'><Button>{messages[language].NavIteamButton}</Button></NavLink></li>\r\n            </NavList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;","import styled from 'styled-components';\r\n\r\nexport const LayoutStyle = styled.div` \r\n   width:100%;\r\n`;\r\n\r\nexport const LayoutStyleContainer = styled.div` \r\n   max-width:1200px;\r\n   margin:auto;\r\n   display:flex;\r\n   justify-content:space-between;\r\n   align-items:center;\r\n   \r\n`;\r\n","import Logo from \"./logo/logo\";\r\nimport Nav from \"./nav/nav\";\r\nimport { LayoutStyle, LayoutStyleContainer } from \"./Layout.styled\";\r\n\r\nconst Layout = (props) => {\r\n\r\n    return (\r\n        <LayoutStyle>\r\n            <LayoutStyleContainer>\r\n                <Logo />\r\n                <Nav />\r\n            </LayoutStyleContainer>\r\n        </LayoutStyle>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Layout;","import Layout from \"../../components/Layout/Layout\";\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Layout/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const ContainerJumbotron = styled.div` \r\n   background-color: ${({theme})=>theme.primaryColor};\r\n`;\r\n\r\nexport const ContainerInfoStyled = styled.div` \r\n    max-width: 1200px;\r\n    margin:auto;\r\n    display:flex;\r\n    flex-direction:column;\r\n\r\n   @media (min-width:700px){\r\n      flex-direction:row;      \r\n    }\r\n`;\r\n\r\nexport const InfoJumbotron = styled.div` \r\n    margin-left:10px;\r\n    padding: 100px 0px;\r\n    margin-right:10px;\r\n    \r\n    @media (max-width:500px){\r\n      text-align:center;\r\n      \r\n    }\r\n`;\r\n\r\nexport const TextUpperCase = styled.p` \r\n   text-transform: uppercase;\r\n   color:white;\r\n   font-weight:bold;\r\n   font-size: 40px;\r\n   line-height: 20px;\r\n\r\n   @media (max-width:500px){\r\n      font-size: 25px;\r\n   }\r\n   @media (max-width:1100px){\r\n      font-size: 27px;      \r\n    }\r\n`;\r\n\r\nexport const TextLowerCase = styled.p` \r\n   text-transform: lowercase;\r\n   color:white;\r\n   font-weight:bold;\r\n   font-size: 20px;\r\n   max-width: 500px;\r\n`;\r\n\r\nexport const Button = styled.button` \r\n    font-size:18px;\r\n    padding: 15px 25px;\r\n    background-color: #074D05;\r\n    color: white;\r\n    border: none;\r\n`;\r\n\r\nexport const ImgStyle = styled.img` \r\n   max-width:100%;\r\n   padding-left: 100px;\r\n   box-sizing: border-box;\r\n\r\n   @media (max-width:1100px){\r\n      padding-left: 0px;\r\n   }\r\n  \r\n`;\r\n","export default __webpack_public_path__ + \"static/media/banner.e8c6d725.svg\";","import { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ContainerJumbotron, ContainerInfoStyled, InfoJumbotron, TextUpperCase, TextLowerCase, Button, ImgStyle } from \"./jumbotron.styled\";\r\nimport LogoJumbotron from \"../../assets/img/banner.svg\";\r\nimport { I18nContext } from \"../../config/language/index\";\r\n\r\n\r\nconst Jumbotron = () => {\r\n    const { messages, language } = useContext(I18nContext);\r\n\r\n    return (\r\n        <ContainerJumbotron>\r\n            <ContainerInfoStyled>\r\n                <InfoJumbotron>\r\n                    <TextUpperCase>{messages[language].JumbotronTitle1}</TextUpperCase>\r\n                    <TextUpperCase>{messages[language].JumbotronTitle2}</TextUpperCase>\r\n                    <TextUpperCase>{messages[language].JumbotronTitle3}</TextUpperCase>\r\n                    <TextLowerCase>{messages[language].JumbotronText}</TextLowerCase>\r\n                    <NavLink to='/posts'><Button>{messages[language].NavIteamButton}</Button></NavLink> \r\n                </InfoJumbotron>\r\n                <InfoJumbotron>\r\n                    <ImgStyle src={LogoJumbotron}></ImgStyle>\r\n                </InfoJumbotron>\r\n            </ContainerInfoStyled>\r\n        </ContainerJumbotron>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import styled from 'styled-components';\r\n\r\nexport const FeaturedStyled = styled.div` \r\n   width:100%;\r\n   text-align:center;\r\n   margin-top:50px;\r\n   margin-bottom: 50px;\r\n   padding:20px;\r\n   box-sizing:border-box;\r\n`;\r\nexport const Title = styled.div` \r\n  font-weight:bold;\r\n  font-size: 30px;\r\n`;","import { useContext } from \"react\";\r\nimport { FeaturedStyled, Title } from \"./featured.styled\";\r\nimport { I18nContext } from \"../../config/language/index\";\r\nconst Featured = () => {\r\n    const { messages, language } = useContext(I18nContext);\r\n\r\n    return (\r\n        <FeaturedStyled>\r\n            <Title>{messages[language].FeaturedTitle}</Title>\r\n            <p>{messages[language].FeaturedText}</p>\r\n        </FeaturedStyled>\r\n    );\r\n}\r\n\r\nexport default Featured;","import styled from 'styled-components';\r\n\r\nexport const CardFeatured = styled.div` \r\n   width:100%;\r\n`;\r\n\r\nexport const CardFeaturedContainer = styled.div` \r\n   max-width: 1200px;\r\n   margin:auto;\r\n   display:flex;\r\n   margin-bottom:80px;\r\n   align-items:center;\r\n   flex-direction:column;\r\n   justify-content:center;\r\n\r\n   @media (min-width:700px){\r\n      flex-direction: ${({reverse}) => reverse?'row-reverse':'row'}; \r\n          \r\n    }\r\n`;\r\n\r\nexport const TextContainer = styled.div` \r\n  \r\n   line-height:50px;\r\n   \r\n   flex-direction:column;\r\n    text-align:center;\r\n \r\n    @media (min-width:700px){\r\n      padding-right:${({reverse}) => reverse?'0':'250px'};\r\n      padding-left:${({reverse}) => reverse?'250px':'0px'};\r\n       text-align:left;   \r\n    }\r\n`;\r\n\r\nexport const ImagenContainer = styled.div` \r\n  \r\n`;\r\n\r\nexport const Imagen = styled.img` \r\n   max-width:300px;\r\n   margin:auto;\r\n   display:block;\r\n`;\r\n\r\nexport const Title = styled.div` \r\n   color:  ${({theme})=> theme.primaryColor};\r\n   font-size: 20px;\r\n   border-bottom:3px solid  ${({theme})=> theme.primaryColor};\r\n   max-width:200px;\r\n   margin:auto;\r\n   \r\n   @media (min-width:700px){\r\n      margin:0;  \r\n   }\r\n   \r\n`;\r\n\r\nexport const SubTitle = styled.div` \r\n  font-weight: bold;\r\n  font-size: 25px;\r\n`;\r\n\r\nexport const Text = styled.div` \r\n   font-size: 15px;\r\n   color: gray;\r\n   margin-bottom:20px;\r\n`;\r\n\r\n","export default __webpack_public_path__ + \"static/media/completedTask.641c081d.svg\";","export default __webpack_public_path__ + \"static/media/rocket.48cddd88.svg\";","export default __webpack_public_path__ + \"static/media/taskingg.60b2d305.svg\";","export default __webpack_public_path__ + \"static/media/task.d0c71108.svg\";","import { useContext } from \"react\";\r\nimport { CardFeatured, CardFeaturedContainer, TextContainer, ImagenContainer, Imagen, Title, SubTitle, Text } from \"./card.styled\";\r\nimport { I18nContext } from \"../../config/language/index\";\r\nimport card1Img from \"../../assets/img/completedTask.svg\";\r\nimport card2Img from \"../../assets/img/rocket.svg\";\r\nimport card3Img from \"../../assets/img/taskingg.svg\";\r\nimport card4Img from \"../../assets/img/task.svg\";\r\n\r\nconst Card = () => {\r\n\r\n    const { messages, language } = useContext(I18nContext);\r\n    \r\n    return (\r\n        <CardFeatured>\r\n            <CardFeaturedContainer>\r\n                <TextContainer>\r\n                    <Title>{messages[language].CardTitle}</Title>\r\n                    <SubTitle>{messages[language].CardSubTitle}</SubTitle>\r\n                    <Text>{messages[language].CardText}</Text>\r\n                </TextContainer>\r\n                <ImagenContainer>\r\n                <Imagen src={card1Img}/>\r\n                </ImagenContainer>\r\n            </CardFeaturedContainer>\r\n            <CardFeaturedContainer reverse>\r\n                <TextContainer reverse>\r\n                    <Title>{messages[language].CardTitle2}</Title>\r\n                    <SubTitle>{messages[language].CardSubTitle2}</SubTitle>\r\n                    <Text>{messages[language].CardText2}</Text>\r\n                </TextContainer>\r\n                <ImagenContainer>   \r\n                    <Imagen src={card2Img}/>\r\n                </ImagenContainer>\r\n            </CardFeaturedContainer>\r\n            <CardFeaturedContainer>\r\n                <TextContainer >\r\n                    <Title>{messages[language].CardTitle3}</Title>\r\n                    <SubTitle>{messages[language].CardSubTitle3}</SubTitle>\r\n                    <Text>{messages[language].CardText3}</Text>\r\n                </TextContainer>\r\n                <ImagenContainer>\r\n                    <Imagen src={card3Img}/>\r\n                </ImagenContainer>\r\n            </CardFeaturedContainer>\r\n            <CardFeaturedContainer reverse>\r\n                <TextContainer reverse>\r\n                    <Title>{messages[language].CardTitle4}</Title>\r\n                    <SubTitle>{messages[language].CardSubTitle4}</SubTitle>\r\n                    <Text>{messages[language].CardText4}</Text>\r\n                </TextContainer>\r\n                <ImagenContainer>\r\n                <Imagen src={card4Img}/>\r\n                </ImagenContainer>\r\n            </CardFeaturedContainer>\r\n        </CardFeatured>\r\n    );\r\n}\r\n\r\nexport default Card;","import Jumbotron from \"../../components/jumbotron/jumbotron\";\r\nimport Featured from \"../../components/featured/featured\";\r\nimport Card from \"../../components/card/card\";\r\n\r\nconst Body = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron/>\r\n            <Featured/>\r\n            <Card/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import styled from 'styled-components';\r\n\r\nexport const ContainerFooter = styled.div` \r\n   max-width:1200px;\r\n   display:flex;\r\n   margin:auto;\r\n   margin-top:100px;\r\n   justify-content:space-around;\r\n   border-top:1px solid #ccc;\r\n   padding: 15px;\r\n   \r\n   @media (max-width:500px){\r\n      flex-direction:column;\r\n   }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ContainerTheme = styled.div` \r\n   display: flex;\r\n   width: 50%;\r\n   justify-content:space-around;\r\n   align-items:center;\r\n   margin:auto;\r\n\r\n   @media (max-width:500px){\r\n    width:100%;\r\n   }\r\n`;\r\n\r\nexport const Text = styled.p` \r\n   font-weight:bold;\r\n`;\r\n\r\nexport const Button = styled.button` \r\n   padding: 8px 25px;\r\n   border-radius: 10px;\r\n   height:30px;\r\n   text-align:center;\r\n   border: 0px;\r\n   background-color:transparent;\r\n   transition: 0.5s;\r\n   &:hover{\r\n    transition: 0.5s;\r\n    background-color: #000000c2;\r\n    color:white;\r\n   }\r\n`;\r\n\r\nexport const ButtonBlue = styled(Button)` \r\n  \r\n   &:hover{\r\n    background-color: #00609e;\r\n   }\r\n`;","export const blueTheme = {\r\n    primaryColor: '#00609e',\r\n   \r\n};\r\nexport const darkTheme = {\r\n    primaryColor: '#000000c2',\r\n    \r\n};\r\n\r\n","import { Text, ContainerTheme, Button, ButtonBlue } from './switchThemeContainer.styled';\r\nimport { useContext } from \"react\";\r\nimport { I18nContext } from \"../../../config/language/index\";\r\nimport { blueTheme, darkTheme } from \"../../../config/theme\";\r\n\r\nconst SwitchThemeContainer = ({setTheme}) =>{\r\n    const { messages, language } = useContext(I18nContext);\r\n\r\n    return (\r\n        <ContainerTheme>\r\n            <Text>{messages[language].SelectTheme}</Text>\r\n            <Button onClick={()=>setTheme(darkTheme)}>{messages[language].colorDark}</Button>\r\n            <ButtonBlue onClick={()=>setTheme(blueTheme)}>{messages[language].colorBlue}</ButtonBlue>\r\n        </ContainerTheme>\r\n    );\r\n}\r\n\r\nexport default SwitchThemeContainer;","import styled from 'styled-components';\r\n\r\nexport const LanguageContainer = styled.div` \r\n   width:40%;\r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:space-around;\r\n   margin:auto;\r\n   @media (max-width:500px){\r\n    width:100%;\r\n   }\r\n`;\r\n\r\nexport const Copyright = styled.p` \r\n  color: ${({theme})=> theme.primaryColor};\r\n`;\r\n\r\nexport const Select = styled.select` \r\n    padding: 7px;\r\n    height: 40px;\r\n`;\r\n","import { LanguageContainer, Copyright, Select } from './switchLenguageContainer.styled';\r\nimport { useContext } from \"react\";\r\nimport { I18nContext } from \"../../../config/language/index\";\r\n\r\nconst SwitchLenguageContainer = ({setLanguage}) => {\r\n    const { language } = useContext(I18nContext);\r\n\r\n    return (\r\n        <LanguageContainer>\r\n            <Copyright>Ⓒ TaskManager 2021</Copyright>\r\n            <Select value={language} onChange={({target})=> setLanguage(target.value)}>\r\n                <option disabled={language==='es'} value='es'>ES</option>\r\n                <option disabled={language==='en'} value='en'>EN</option>\r\n            </Select>\r\n        </LanguageContainer>\r\n\r\n    );\r\n}\r\n\r\nexport default SwitchLenguageContainer;","import { ContainerFooter } from './footerContainer.styled';\r\nimport SwitchTheme from \"../footerContainer/switchLenguageTheme/switchThemeContainer\";\r\nimport SwitchLenguage from \"../footerContainer/switchLenguageTheme/switchLenguageContainer\";\r\n\r\nconst FooterContainer = ({ setTheme, setLanguage }) =>{\r\n\r\n    return (\r\n        <ContainerFooter>\r\n            <SwitchTheme setTheme={setTheme}/>\r\n            <SwitchLenguage setLanguage={setLanguage}/>\r\n        </ContainerFooter>\r\n       \r\n    );\r\n}\r\n\r\nexport default FooterContainer;","import FooterContainer from \"../../components/footerContainer/footerContainer\";\r\n\r\nconst Footer = (props) =>{\r\n\r\n    return (\r\n        <div>\r\n            <FooterContainer {...props}/>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\nexport const TaskLayoutStyled = styled.div` \r\n   width: 22%;\r\n   min-height: 300px;\r\n   padding:30px;\r\n   \r\n   display:flex;\r\n   flex-direction:column;\r\n   background-color: ${({color})=> color};\r\n   border-radius: 10px;\r\n   word-wrap:break-word;\r\n   position:relative;\r\n   transition:0.5s;\r\n   margin-bottom:20px;\r\n   margin-right: 20px;\r\n   box-sizing:border-box;\r\n   &:hover{\r\n      transform:scale(1.25);\r\n      transition:0.5s;\r\n      border: 1px solid black;\r\n      z-index:999;\r\n   }\r\n   \r\n   @media (max-width:1100px){\r\n      width: 45%;\r\n   }\r\n   @media (max-width:700px){\r\n      width: 100%;\r\n      margin-right: 0px;\r\n\r\n      &:hover{\r\n      transform:scale(1.05);\r\n      }\r\n   }\r\n`;\r\n\r\nexport const Title = styled.div` \r\n   font-size:30px;\r\n   font-weight:bold;\r\n   text-align:center;\r\n`;\r\n\r\nexport const Subtitle = styled.div` \r\n  font-size:25px;\r\n  margin-top:10px;\r\n`;\r\n\r\nexport const Content = styled.div` \r\n   font-size:17px;\r\n   margin-top:30px;\r\n   margin-bottom:20px;\r\n`;\r\n\r\nexport const ButtonDelete = styled.button` \r\n   padding: 8px 25px;\r\n   border-radius: 10px;\r\n   height:30px;\r\n   text-align:center;\r\n   border: 0px;\r\n   background-color:transparent;\r\n   position: absolute;\r\n   bottom:20px;\r\n   left:50%;\r\n   transform:translateX(-50%);\r\n   transition: 0.5s;\r\n   &:hover{\r\n    transition: 0.5s;\r\n    background-color: red;\r\n    color:white;\r\n   }\r\n`;","import { TaskLayoutStyled, Title, Subtitle, Content, ButtonDelete } from \"./taskLayout.styled\";\r\nconst TaskLayout = props => {\r\n    \r\n    return (\r\n        <TaskLayoutStyled color={props.color}>\r\n            <Title>{props.title}</Title>\r\n            <Subtitle>{props.subtitle}</Subtitle>\r\n            <Content>{props.content}</Content>\r\n            <ButtonDelete onClick={props.methodDelete}>Delete</ButtonDelete>\r\n        </TaskLayoutStyled>\r\n    );\r\n}\r\n\r\nexport default TaskLayout;","import styled from 'styled-components';\r\n\r\nexport const TaskContainer = styled.div` \r\n   max-width: 1200px;\r\n   margin:auto;\r\n   box-sizing:border-box;\r\n \r\n   \r\n`;\r\n\r\nexport const PanelTasks = styled.div` \r\n   display:flex;\r\n   flex-wrap: wrap;\r\n   padding:20px;\r\n   justify-content:center;\r\n   box-sizing:border-box;\r\n   \r\n`;\r\n\r\nexport const PanelCrateTask = styled.div` \r\n   width:50%;\r\n   margin:auto;\r\n   padding:20px;\r\n   box-sizing:border-box;\r\n   background-color:#009bff91;\r\n   \r\n   border-radius:10px;\r\n   transform:  ${({displayPanel})=> displayPanel?'translateY(-50)' : 'translateY(-100vh)'};\r\n   opacity: ${({displayPanel})=> displayPanel?'1' : '0'};\r\n   transition: all 0.3s ease-out;\r\n   @media (max-width:700px){\r\n      width: 90%;\r\n   }\r\n   \r\n`;\r\n\r\nexport const Inputs = styled.input` \r\n   width:100%;\r\n   margin-top:20px;\r\n   margin-bottom:20px;\r\n   height:20px;\r\n   border-radius: 10px;\r\n   border: 0px;\r\n   \r\n`;\r\n\r\nexport const TextArea = styled.textarea` \r\n   margin-top:20px;\r\n   width:100%;\r\n   height:50px;\r\n   border-radius: 10px;\r\n   border: 0px;\r\n`;\r\n\r\nexport const Button = styled.button` \r\n    padding: 10px 50px;\r\n    margin:auto;\r\n    display:block;\r\n    box-sizing:border-box;\r\n    background-color: ${({theme})=>theme.primaryColor};\r\n    color: white;\r\n    border: none;\r\n`;\r\n\r\nexport const ButtonADD = styled(Button)` \r\n    background-color:${({theme})=>theme.primaryColor};\r\n    border-radius: 100px;\r\n    padding: 20px 20px;\r\n    opacity: ${({displayPanel})=> !displayPanel?'1' : '0'};\r\n`;\r\n\r\nexport const Title = styled.h1` \r\n   font-weight:20px;\r\n   font-size:bold;\r\n  text-align:center;\r\n\r\n`;\r\n\r\nexport const ButtonColorsContainer = styled.div` \r\n   display:flex;\r\n    justify-content:space-around;\r\n    margin-bottom: 40px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const ButtonColor = styled.button` \r\n   padding: 8px 25px;\r\n   border-radius: 10px;\r\n   height:30px;\r\n   text-align:center;\r\n   border: 0px;\r\n   background-color:transparent;\r\n   transition: 0.5s;\r\n   &:hover{\r\n    transition: 0.5s;\r\n    background-color: green;\r\n    color:white;\r\n   }\r\n`;\r\n\r\nexport const ButtonBlue = styled(ButtonColor)` \r\n  \r\n   &:hover{\r\n    background-color: #00609e;\r\n   }\r\n`;\r\n\r\nexport const ButtonPink = styled(ButtonColor)` \r\n    \r\n   &:hover{\r\n    background-color: #9e008b;\r\n   }\r\n`;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://taskmanager-c8782-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import \"./spinner.css\";\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className=\"loader\">Loading...</div>\r\n    );\r\n}\r\n\r\nexport default spinner;","import { useState, useContext, useEffect } from \"react\";\r\nimport TaskLayout from \"./taskLayout/taskLayout\";\r\nimport { TaskContainer, PanelTasks, PanelCrateTask, Title, Inputs, Button, ButtonADD, TextArea, ButtonColorsContainer, ButtonColor, ButtonBlue, ButtonPink } from \"./tasks.styled\";\r\nimport { I18nContext } from \"../../config/language/index\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/spinner/spinner\";\r\n\r\n\r\nconst Tasks = () => {\r\n    const { messages, language } = useContext(I18nContext);\r\n\r\n    const [task, setTask] = useState({\r\n        tasks: {\r\n            title: '',\r\n            subtitle: '',\r\n            content: '',\r\n            colorTaskChoosen: '#00609e',\r\n        }\r\n        ,\r\n        colectionPosts: [],\r\n        displayPanel: false,\r\n        loading: false,\r\n    });\r\n    const setLoading = loading => setTask({\r\n        ...task,\r\n        loading,\r\n    });\r\n    const getTasks = () => {\r\n        setLoading(true);\r\n        axios.get('/orders.json')\r\n            .then(response => {\r\n                if (response.data) {\r\n                    console.log('aa')\r\n                    const formatTasks = tasks => Object.entries(tasks).map(([id, task]) => ({ id, ...task }));\r\n                    setTask({\r\n                        tasks: task.tasks,\r\n                        colectionPosts: formatTasks(response.data).reverse(),\r\n                        displayPanel: false,\r\n                        loading: false,\r\n                    });\r\n                }else{\r\n                    setLoading(false);\r\n                }\r\n                if (!response.data) {\r\n                    setTask({\r\n                       ...task,\r\n                        colectionPosts: [],\r\n\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n    }\r\n    useEffect(() => {\r\n        getTasks();\r\n    }, []);\r\n\r\n    /* const postTask = () => {\r\n        const Tasks = task.tasks;\r\n        const colectionTasks = [...task.colectionPosts];\r\n        colectionTasks.push(Tasks);\r\n\r\n        setTask({\r\n            tasks: {\r\n                title: '',\r\n                subtitle: '',\r\n                content: '',\r\n                colorTaskChoosen: '#00609e',\r\n\r\n            },\r\n            colectionPosts: colectionTasks,\r\n            displayPanel: false,\r\n        });\r\n    } */\r\n\r\n    const deletePost = (id) => {\r\n        /* const tasksValues = {\r\n            ...task.tasks\r\n        }\r\n        const colectionTasks = [...task.colectionPosts];\r\n        colectionTasks.splice(key, 1);\r\n\r\n        setTask({\r\n            tasks: tasksValues,\r\n            colectionPosts: colectionTasks,\r\n            displayPanel: false,\r\n        }); */\r\n        setLoading(true);\r\n        axios.delete(\"/orders/\" + id + \".json\").then(getTasks,()=> setLoading(false)).catch(error => console.log(error))\r\n    }\r\n\r\n    const buildTask = ({ target }, name) => {\r\n        const tasksModify = {\r\n            ...task.tasks\r\n        }\r\n        const newTask = { ...tasksModify, [name]: target.value };\r\n        const colectionPosts = [...task.colectionPosts];\r\n        setTask({\r\n            tasks: newTask,\r\n            colectionPosts: colectionPosts,\r\n            displayPanel: true,\r\n\r\n        });\r\n    }\r\n\r\n    const colorTask = (color) => {\r\n        const tasksSave = {\r\n            ...task.tasks\r\n        };\r\n        const setColor = { ...task.tasks, ['colorTaskChoosen']: color };\r\n        const allPosts = [\r\n            ...task.colectionPosts\r\n        ];\r\n        setTask({\r\n            tasks: setColor,\r\n            colectionPosts: allPosts,\r\n            displayPanel: true,\r\n        });\r\n    }\r\n\r\n    const displayPanelCrateTask = (displayValue) => {\r\n        setTask({\r\n            ...task,\r\n            displayPanel: displayValue,\r\n        });\r\n    }\r\n\r\n    const storeData = () => {\r\n\r\n        const storingTask = {\r\n            title: task.tasks.title,\r\n            subtitle: task.tasks.subtitle,\r\n            content: task.tasks.content,\r\n            colorTaskChoosen: task.tasks.colorTaskChoosen,\r\n        }\r\n        setLoading(true);\r\n        axios.post('/orders.json', storingTask)\r\n            .then(getTasks)\r\n            .finally(() => setLoading(false));\r\n    }\r\n\r\n    let showView = task.colectionPosts.map((theTask) =>\r\n        <TaskLayout\r\n            key={theTask.id}\r\n            title={theTask.title}\r\n            subtitle={theTask.subtitle}\r\n            content={theTask.content}\r\n            methodDelete={() => deletePost(theTask.id)}\r\n            color={theTask.colorTaskChoosen}\r\n        />);\r\n    if (task.loading) {\r\n        showView = <Spinner />\r\n    }\r\n\r\n    return (\r\n\r\n        <TaskContainer>\r\n            <PanelTasks>\r\n                {showView}\r\n            </PanelTasks>\r\n            <PanelCrateTask displayPanel={task.displayPanel}>\r\n                <Title>{messages[language].titleBuildTask}</Title>\r\n                <label>{messages[language].titleTask}</label>\r\n                <Inputs type='text' placeholder='Title' value={task.tasks.title} onChange={(event) => buildTask(event, 'title')} />\r\n                <label>{messages[language].subTitleTask}</label>\r\n                <Inputs type='text' placeholder='Sub-Title' value={task.tasks.subtitle} onChange={(event) => buildTask(event, 'subtitle')} />\r\n                <label>{messages[language].contentTask}</label>\r\n                <TextArea type='text' placeholder='Content of the task' value={task.tasks.content} onChange={(event) => buildTask(event, 'content')} />\r\n                <ButtonColorsContainer>\r\n                    <ButtonBlue onClick={() => colorTask('#00609e')}>{messages[language].buttonColorBlue}</ButtonBlue>\r\n                    <ButtonPink onClick={() => colorTask('pink')}>{messages[language].buttonColorPink}</ButtonPink>\r\n                    <ButtonColor onClick={() => colorTask('#00800091')}>{messages[language].buttonColorGreen}</ButtonColor>\r\n                </ButtonColorsContainer>\r\n                <Button onClick={storeData}>Post task</Button>\r\n            </PanelCrateTask>\r\n            <ButtonADD displayPanel={task.displayPanel} onClick={() => displayPanelCrateTask(true)}>{messages[language].add}</ButtonADD>\r\n        </TaskContainer>\r\n    );\r\n}\r\n\r\nexport default Tasks;","import { useState } from \"react\";\nimport { ThemeProvider } from 'styled-components';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Header from \"./containers/header/header\";\nimport Body from \"./containers/body/body\";\nimport Footer from \"./containers/footer/footer\";\nimport Tasks from \"./containers/tasks/tasks\";\nimport messages, { defaultLanguage, I18nContext } from \"./config/language\";\nimport { blueTheme } from \"./config/theme\";\n\n/* const defaultTheme = window.localStorage.getItem('theme'); */\n\nconst App = () => {\n  const [language, setLanguage] = useState(defaultLanguage);\n  const [theme, setTheme] = useState(blueTheme);\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <I18nContext.Provider value={{ messages, language }}>\n          <Header />\n          <Switch>\n            <Route path='/' exact component={Body} />\n            <Route path='/posts'exact component={Tasks} />\n            <Route render={() => <h1>Not found</h1>} />\n          </Switch>\n          <Footer setTheme={setTheme} setLanguage={setLanguage} />\n        </I18nContext.Provider>\n      </ThemeProvider>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}